@rendermode InteractiveServer
@using FalboObscura.Core.Models.Constants

<!-- Loading Overlay -->
@if (IsUploading)
{
    <div class="loading-overlay">
        <div class="loading-content">
            <div class="spinner-border text-primary" role="status">
                <span class="visually-hidden">Loading...</span>
            </div>
            <p class="mt-2">Uploading image...</p>
        </div>
    </div>
}

<h3>GalleryViewer</h3>

<p>@ImageType</p>

<div class="gallery-images">
    @if (GalleryImages != null && GalleryImages.Any())
    {
        @foreach (var image in GalleryImages)
        {
            <div class="gallery-item">
                <img src="@image.ImageUrl" alt="@image.AltText" />
            </div>
        }
    }
    else
    {
        <p>No images found for type: @ImageType</p>
    }
</div>

<div class="image-upload-form mt-4">
    <h5>Add New Image</h5>
    <EditForm Model="UploadModel" OnValidSubmit="CreateGalleryImage">
        <DataAnnotationsValidator />
        <ValidationSummary class="text-danger" />

        <fieldset disabled="@IsUploading">
            <div class="mb-3">
                <label for="imageFile" class="form-label">Image File *</label>
                <InputFile id="imageFile" class="form-control" accept="image/*"
                          OnChange="HandleFileSelected" multiple="false" disabled="@IsUploading" />
                <ValidationMessage For="@(() => UploadModel.ImageFile)" class="text-danger" />
            </div>

        <div class="mb-3">
            <label for="title" class="form-label">Title (Optional)</label>
            <InputText id="title" class="form-control" @bind-Value="UploadModel.Title"
                      placeholder="Enter image title" />
        </div>

        <div class="mb-3">
            <label for="altText" class="form-label">Alt Text *</label>
            <InputText id="altText" class="form-control" @bind-Value="UploadModel.AltText"
                      placeholder="Describe the image for accessibility" />
            <ValidationMessage For="@(() => UploadModel.AltText)" class="text-danger" />
        </div>

        <div class="mb-3">
            <label for="description" class="form-label">Description (Optional)</label>
            <InputTextArea id="description" class="form-control" @bind-Value="UploadModel.Description"
                          rows="3" placeholder="Enter image description" />
            <ValidationMessage For="@(() => UploadModel.Description)" class="text-danger" />
        </div>
        </fieldset>

        <button type="submit" class="btn btn-success" disabled="@IsUploading">
            @if (IsUploading)
            {
                <span class="spinner-border spinner-border-sm" role="status"></span>
                <span>Uploading...</span>
            }
            else
            {
                <span>Upload Image</span>
            }
        </button>
    </EditForm>
</div>

<div class="delete-form mt-3">
    <h5>Delete Gallery Image</h5>
    <EditForm Model="DeleteImageId" OnValidSubmit="HandleDeleteSubmit">
        <div class="mb-3">
            <label for="imageId" class="form-label">Image ID (GUID):</label>
            <InputText id="imageId" class="form-control" @bind-Value="DeleteImageId" placeholder="Enter image GUID" />
        </div>
        <button type="submit" class="btn btn-danger">Delete Image</button>
    </EditForm>
</div>

<style>
    .loading-overlay {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0, 0, 0, 0.5);
        display: flex;
        justify-content: center;
        align-items: center;
        z-index: 9999;
    }

    .loading-content {
        background-color: white;
        padding: 2rem;
        border-radius: 8px;
        text-align: center;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    }

    .gallery-item {
        border: 1px solid #ddd;
        padding: 1rem;
        margin-bottom: 1rem;
        border-radius: 4px;
    }
</style>